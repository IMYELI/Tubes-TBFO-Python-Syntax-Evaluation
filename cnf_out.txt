S0 ->  ACTION  ACTION | FX40  V | FX41  FX42 | FX43  FX44 | FX45  FX46 | FX47  FX48 | FX49  FX50 | LOOP | COMMENT | CLASS | METHOD | WITH | PASS | INPUT | FX51  RETURN_TYPE | FX6  FUNCTION | FX52  FX53 | FX54  FX11 | FX55  FX56 | VAR  BRACKETS | FX57  FX58 | FX13  MODULE | FX13  MULT_MODULE | FX64  FX61 | FX65  FX11 
ACTION ->  ACTION  ACTION | FX40  V | FX41  FX42 | FX43  FX44 | FX45  FX46 | FX47  FX48 | FX49  FX50 | LOOP | COMMENT | CLASS | METHOD | WITH | PASS | INPUT | FX51  RETURN_TYPE | FX6  FUNCTION | FX52  FX53 | FX54  FX11 | FX55  FX56 | VAR  BRACKETS | FX57  FX58 | FX13  MODULE | FX13  MULT_MODULE | FX64  FX61 | FX65  FX11 
LOOP_ACTION ->  LOOP_ACTION  LOOP_ACTION | break | continue | ACTION  ACTION | FX40  V | FX41  FX42 | FX43  FX44 | FX45  FX46 | FX47  FX48 | FX49  FX50 | COMMENT | METHOD | PASS | INPUT | FX51  RETURN_TYPE | FX6  FUNCTION | FX52  FX53 | FX54  FX11 | FX55  FX56 | VAR  BRACKETS | FX57  FX58 | FX13  MODULE | FX13  MULT_MODULE | FX64  FX61 | FX65  FX11 | WHILE_LOOP  LOOP_ACTION | FOR_LOOP  LOOP_ACTION | FX85  FX68 | FX86  FX11 | FX89  FX11 
IF_CONDITION ->  FX54  FX11 | FX55  FX56 
ELIF_CONDITION ->  FX73  FX74  ELIF_CONDITION | FX19  FX11 
LOOP ->  WHILE_LOOP  LOOP_ACTION | FOR_LOOP  LOOP_ACTION 
WHILE_LOOP ->  FX75  FX11 
FOR_LOOP ->  FX76  FX77  FX11 
ITERABLE ->  TUPLE | FX23  FOR_RANGE | FX78  FX25 
FOR_RANGE ->  FX79  FX80  FX81  FX9 | FX82  FX9 | FX83  FX84  FX9 
CLASS ->  FX85  FX68 | FX86  FX11 
DEF ->  FX51  RETURN_TYPE | FX64  FX61 | FX65  FX11 
DEF_HEAD ->  FX64  FX61 | FX65  FX11 
RETURN_TYPE ->  FX28  V 
PARAM ->  FX87  PARAM | variable 
METHOD ->  FX88  METHOD | VAR  BRACKETS 
FUNCTION ->  VAR  BRACKETS 
WITH ->  FX89  FX11 
WITH_TYPE ->  FUNCTION | FX88  METHOD | VAR  BRACKETS 
IMPORT ->  FX57  FX58 | FX13  MODULE | FX13  MULT_MODULE 
MULT_MODULE ->  FX90  MULT_MODULE | FX91  VAR 
MODULE ->  * | MULT_MODULE | FX92  MODULE | variable 
IMPORT_CONT ->  FX93  IMPORT_CONT | variable 
DICT ->  FX94  FX31 | FX30  FX31 
DICT_CONT ->  FX95  DICT_CONT | FX96  VAL 
DICT_TYPE ->  FX96  VAL 
DICT_KEY ->  num | FX97  FX32 | FX98  FX34 | FX99  STRING 
RAISE ->  FX6  FUNCTION 
PRINT ->  FX52  FX53 
BRACKETS ->  FX100  FX9 | FX8  FX9 
COMMENT ->  FX35  FX33 | FX101  FX102  FX103  FX34 | FX104  FX105  FX106  FX32 
VAR ->  variable 
V ->  VAR | FX107  V | num | TUPLE | None | DICT | METHOD | FX97  FX32 | FX98  FX34 | FX99  STRING | True | False | FX108  V | FX109  V | FX110  V | FX111  V | FX39  V | FX78  FX25 | VAR  BRACKETS 
COMPARE ->  eq | neq | < | > | le | ge 
VAL ->  num | TUPLE | None | DICT | METHOD | FX97  FX32 | FX98  FX34 | FX99  STRING | True | False | FX108  V | FX109  V | FX110  V | FX111  V | FX39  V | FX78  FX25 | VAR  BRACKETS 
LIST ->  FX78  FX25 
OPS ->  + | - | * | / | % | pow | div 
STRING ->  FX97  FX32 | FX98  FX34 | FX99  STRING 
BOOL ->  True | False | FX108  V | FX109  V | FX110  V | FX111  V | FX39  V 
PASS ->  pass 
FX0 ->  = 
FX1 ->  + 
FX2 ->  - 
FX3 ->  * 
FX4 ->  / 
FX5 ->  % 
FX6 ->  raise 
FX7 ->  print 
FX8 ->  ( 
FX9 ->  ) 
FX10 ->  if 
FX11 ->  : 
FX12 ->  from 
FX13 ->  import 
FX14 ->  def 
FX15 ->  class 
FX16 ->  with 
FX17 ->  as 
FX18 ->  elif 
FX19 ->  else 
FX20 ->  while 
FX21 ->  for 
FX22 ->  in 
FX23 ->  range 
FX24 ->  [ 
FX25 ->  ] 
FX26 ->  num 
FX27 ->  , 
FX28 ->  return 
FX29 ->  . 
FX30 ->  { 
FX31 ->  } 
FX32 ->  ' 
FX33 ->  string 
FX34 ->  " 
FX35 ->  # 
FX36 ->  is 
FX37 ->  and 
FX38 ->  or 
FX39 ->  not 
FX40 ->  VAR  FX0 
FX41 ->  VAR  FX1 
FX42 ->  FX0  V 
FX43 ->  VAR  FX2 
FX44 ->  FX0  V 
FX45 ->  VAR  FX3 
FX46 ->  FX0  V 
FX47 ->  VAR  FX4 
FX48 ->  FX0  V 
FX49 ->  VAR  FX5 
FX50 ->  FX0  V 
FX51 ->  DEF_HEAD  ACTION 
FX52 ->  FX7  FX8 
FX53 ->  V  FX9 
FX54 ->  FX10  BRACKETS 
FX55 ->  FX10  BRACKETS 
FX56 ->  FX11  ELIF_CONDITION 
FX57 ->  FX12  IMPORT_CONT 
FX58 ->  FX13  MODULE 
FX59 ->  FX14  VAR 
FX60 ->  FX8  PARAM 
FX61 ->  FX9  FX11 
FX62 ->  FX14  VAR 
FX63 ->  FX8  FX9 
FX64 ->  FX59  FX60 
FX65 ->  FX62  FX63 
FX66 ->  FX15  VAR 
FX67 ->  FX8  PARAM 
FX68 ->  FX9  FX11 
FX69 ->  FX15  VAR 
FX70 ->  FX8  FX9 
FX71 ->  FX16  WITH_TYPE 
FX72 ->  FX17  VAR 
FX73 ->  FX18  BRACKETS 
FX74 ->  FX11  ACTION 
FX75 ->  FX20  BRACKETS 
FX76 ->  FX21  VAR 
FX77 ->  FX22  ITERABLE 
FX78 ->  FX24  V 
FX79 ->  FX8  FX26 
FX80 ->  FX27  FX26 
FX81 ->  FX27  FX26 
FX82 ->  FX8  FX26 
FX83 ->  FX8  FX26 
FX84 ->  FX27  FX26 
FX85 ->  FX66  FX67 
FX86 ->  FX69  FX70 
FX87 ->  PARAM  FX27 
FX88 ->  VAR  FX29 
FX89 ->  FX71  FX72 
FX90 ->  MULT_MODULE  FX27 
FX91 ->  IMPORT_CONT  FX17 
FX92 ->  MODULE  FX27 
FX93 ->  IMPORT_CONT  FX29 
FX94 ->  FX30  DICT_CONT 
FX95 ->  DICT_CONT  FX27 
FX96 ->  DICT_KEY  FX11 
FX97 ->  FX32  FX33 
FX98 ->  FX34  FX33 
FX99 ->  STRING  FX1 
FX100 ->  FX8  V 
FX101 ->  FX34  FX34 
FX102 ->  FX34  FX33 
FX103 ->  FX34  FX34 
FX104 ->  FX32  FX32 
FX105 ->  FX32  FX33 
FX106 ->  FX32  FX32 
FX107 ->  V  OPS 
FX108 ->  V  FX36 
FX109 ->  V  COMPARE 
FX110 ->  V  FX37 
FX111 ->  V  FX38 
